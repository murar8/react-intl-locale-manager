name: CI

env: { CI: true }

on:
  push: { branches: [master] }
  pull_request: { branches: [master] }

jobs:
  linux-cache:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1.1.0
      - run: echo "::set-output name=dir::$(yarn cache dir)"
        id: yarn-cache-dir
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: linux-yarn
      - uses: actions/cache@v1
        id: node_modules-cache
        with:
          path: node_modules
          key: linux-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-key: linux-node_modules-
      - run: yarn --frozen-lockfile
        if: "!steps.node_modules-cache.outputs.cache-hit"

  build:
    runs-on: ubuntu-latest
    needs: [linux-cache]

    steps:
      - uses: actions/checkout@v2
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v1.1.0
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: linux-node_modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn commitlint -f ${{ github.event.before }} -t ${{ github.event.after }}
      - run: yarn lint:eslint
      - run: yarn lint:prettier
      - run: yarn test:unit
      - run: bash <(curl -s https://codecov.io/bash)
        env: { CODECOV_TOKEN: 9ad954a6-9289-41f5-a538-2d111022d379 }
      - run: yarn ci:build
      - uses: actions/upload-artifact@v1
        with:
          name: build
          path: build

  integration-tests-os:
    needs: [build]

    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest

    name: integration-tests-${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1.1.0
      - run: echo "::set-output name=dir::$(yarn cache dir)"
        id: yarn-cache-dir
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn
      - uses: actions/cache@v1
        id: node_modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn --frozen-lockfile
        if: "!steps.node_modules-cache.outputs.cache-hit"
      - uses: actions/download-artifact@v1
        with: { name: build }
      - run: yarn test:integration

  integration-tests-node:
    needs: [build]

    strategy:
      matrix:
        node:
          - 10
          - 12.x

    name: integration-tests-node-${{ matrix.node }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1.1.0
        with: { version: "${{ matrix.node }}" }
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: linux-node_modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/download-artifact@v1
        with: { name: build }
      - run: yarn test:integration

  release:
    needs:
      - integration-tests-os
      - integration-tests-node

    if: github.event_name == 'push'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - uses: actions/download-artifact@v1
        with: { name: build }
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: linux-node_modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn ci:build:readme
      - run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
