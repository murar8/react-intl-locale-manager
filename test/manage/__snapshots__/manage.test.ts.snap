// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should merge existing translations with the extracted messages. 1`] = `
Object {
  "en": Object {
    "message1": "content 1",
    "message2": "updated 2",
    "message3": "updated 3",
    "message4": "content 4",
    "message5": "content 5",
  },
  "es": Object {
    "message1": "content 1",
    "message2": "content 2",
    "message3": "content 3",
    "message4": "content 4",
    "message5": "content 5",
  },
}
`;

exports[`Should not extract messages from the paths defined in the --ignore option. 1`] = `
Object {
  "en": Object {
    "message4": "content 4",
    "message5": "",
  },
  "es": Object {
    "message4": "content 4",
    "message5": "",
  },
}
`;

exports[`Should output the translation files in a directory when using the --out-dir option. 1`] = `
Object {
  "message1": "content 1",
  "message2": "",
  "message3": "content 3",
  "message4": "content 4",
  "message5": "",
}
`;

exports[`Should output the translation files in a directory when using the --out-dir option. 2`] = `
Object {
  "message1": "content 1",
  "message2": "",
  "message3": "content 3",
  "message4": "content 4",
  "message5": "",
}
`;

exports[`Should output the translation files in a single file when using the --out-file option. 1`] = `
Object {
  "en": Object {
    "message1": "content 1",
    "message2": "",
    "message3": "content 3",
    "message4": "content 4",
    "message5": "",
  },
  "es": Object {
    "message1": "content 1",
    "message2": "",
    "message3": "content 3",
    "message4": "content 4",
    "message5": "",
  },
}
`;

exports[`Should pass extraction options to babel-plugin-react-intl. 1`] = `
Object {
  "en": Object {
    "message1": "",
    "message2": "message 2",
    "message3": "",
  },
  "es": Object {
    "message1": "",
    "message2": "message 2",
    "message3": "",
  },
}
`;

exports[`Should print information about empty translation keys to stdout. 1`] = `
" Found 4 empty translation keys: 
  2 empty keys for locale en
  2 empty keys for locale es

Translations are already up to date.
"
`;

exports[`Should print information about the changes to stdout. 1`] = `
" Found 1 duplicate ids: 
  message3
    at a.js:7:12
    at b.js:5:12

 Added 5 keys: 
  message1
  message2
  message3
  message4
  message5

 Removed 2 keys: 
  message6
  message7

 Added 1 locales: 
  es

 Removed 2 locales: 
  de
  fr

"
`;

exports[`Should show the help message when invoked with the --help option. 1`] = `
"locale-manager [files..]

Manage the translation process of projects that use the react-intl translation
library. This tool will extract react-intl messages into key-value pairs of id
and message that can be imported directly in code and passed to the
'IntlProvider' component. Additonally, existing translations will be merged with
the extracted messages and information about the changes will be printed to
console.

Positionals:
  [files..]  Space separated list of paths to be scanned for translations. Can
             contain glob patterns.                                     [string]

Options:
  --help                              Show help                        [boolean]
  --version                           Show version number              [boolean]
  -l, --languages                     Comma-separated list of language codes to
                                      support. A translation will be generated
                                      and mantained for every code in this list.
                                                                        [string]
  -f, --out-file                      Path to the file where the extracted
                                      messages will be stored in a single JSON
                                      object grouped by locale.         [string]
  -d, --out-dir                       Path to the directory where the extracted
                                      messages will be stored generating a
                                      [locale].json file for each locale.
                                                                        [string]
  -i, --ignore                        Glob pattern designating the files to
                                      exlcude from the translation process.To
                                      define more than one ignore pattern, just
                                      list the flag multiple times.     [string]
  --module-source-name                The ES6 module source name of the React
                                      Intl package.                     [string]
  --additional-component-names        Comma-separated list of component names to
                                      extract messages from. Note that default
                                      we check for the fact that
                                      'FormattedMessage' is imported from
                                      '--module-source-name' to make sure
                                      variable alias works. This option does not
                                      do that so it's less safe.,       [string]
  --extract-from-format-message-call  Opt-in to extract from
                                      'intl.formatMessage' calls with the
                                      restriction that it has to be called with
                                      an object literal such as
                                      'intl.formatMessage({ id: 'foo', ...})
                                                                       [boolean]

Examples:
  locale-manager -l en,es -d ./locales -i src/**/*.test.js src/**/*.js
  locale-manager -l it,de -f locales.json src/**/*.{js,tsx}

For additional information, visit:
https://github.com/murar8/react-intl-locale-manager
"
`;
